# Kubernetes Deployment Configuration - Trip Service

apiVersion: apps/v1
kind: Deployment
metadata:
  name: trip-service
  namespace: riz-travel
  labels:
    app: trip-service
    tier: backend
    version: v1
spec:
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: trip-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: trip-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: trip-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: trip-service
        image: gcr.io/riz-travel/trip-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8003
          protocol: TCP
        - name: websocket
          containerPort: 8004
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8003"
        - name: WS_PORT
          value: "8004"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: trip-db-url
        - name: DATABASE_POOL_SIZE
          value: "20"
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: url
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: brokers
        - name: KAFKA_TOPIC_TRIPS
          value: "trips"
        - name: KAFKA_TOPIC_COLLABORATIONS
          value: "collaborations"
        - name: AUTH_SERVICE_URL
          value: "http://auth-service.riz-travel.svc.cluster.local"
        - name: LOG_LEVEL
          value: "info"
        - name: JAEGER_AGENT_HOST
          value: "jaeger-agent.monitoring.svc.cluster.local"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: MAX_COLLABORATORS_PER_TRIP
          value: "50"
        - name: WEBSOCKET_PING_INTERVAL
          value: "30000"
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 20"]
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: trip-service-config
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - trip-service
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: trip-service

---
apiVersion: v1
kind: Service
metadata:
  name: trip-service
  namespace: riz-travel
  labels:
    app: trip-service
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: websocket
    port: 8004
    targetPort: websocket
    protocol: TCP
  selector:
    app: trip-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: trip-service-hpa
  namespace: riz-travel
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: trip-service
  minReplicas: 4
  maxReplicas: 30
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: websocket_connections
      target:
        type: AverageValue
        averageValue: "500"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 5
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: trip-service-sa
  namespace: riz-travel
  annotations:
    iam.gke.io/gcp-service-account: trip-service@riz-travel.iam.gserviceaccount.com

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: trip-service-pdb
  namespace: riz-travel
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app: trip-service
